
---
interface Props {
    title: string;
    description?: string;
}

const { title, description = 'AK Web Solutions â€“ Strategische websites, SEO en automatiseringen die je business versnellen.' } = Astro.props;
const canonical = Astro.site ? new URL(Astro.url.pathname, Astro.site).toString() : undefined;

import '../styles/global.css';
import animationsUrl from '../scripts/animations.ts?url';
---

<!doctype html>
<html lang="nl" class="scroll-smooth">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <meta name="description" content={description} />
        {canonical && <link rel="canonical" href={canonical} />}
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link href="https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@400;500;600;700&family=Sora:wght@600;700&display=swap" rel="stylesheet" />
        <script defer type="module" src="https://cdn.jsdelivr.net/npm/@dotlottie/player-component@1.7.1/dist/dotlottie-player.js"></script>
        <script defer type="module" src="https://unpkg.com/@lottiefiles/lottie-player@1.6.0/dist/lottie-player.js"></script>
        <title>{title}</title>
    </head>
    <body class="relative min-h-screen overflow-x-hidden bg-zinc-950 text-zinc-100">
        <div id="progress-bar" class="progress-bar" aria-hidden="true"></div>
        <div class="pointer-events-none fixed inset-0 z-0 bg-[radial-gradient(circle_at_top,_rgba(37,99,235,0.18),_transparent_55%)]" aria-hidden="true"></div>
        <div class="pointer-events-none fixed inset-0 z-0 noise-overlay mix-blend-soft-light opacity-60" aria-hidden="true"></div>
        <div class="relative z-10">
            <slot />
        </div>

        <script type="module" src={animationsUrl}></script>
        <script type="module" is:inline>
            import Lenis from 'lenis';

            const lenis = new Lenis({
                duration: 1.2,
                easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),
                smoothWheel: true,
                smoothTouch: false,
            });

            function raf(time) {
                lenis.raf(time);
                requestAnimationFrame(raf);
            }

            requestAnimationFrame(raf);
        </script>
    </body>
</html>
