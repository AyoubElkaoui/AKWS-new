<section class="section hero-section" id="hero">
  <div id="container" aria-hidden="true"></div>
  <div id="stats"></div>
  <div id="ui-container"></div>

  <header class="hero-header">
    <div class="logo-container" aria-hidden="true">
      <div class="logo-circles">
        <div class="circle circle-1"></div>
        <div class="circle circle-2"></div>
      </div>
    </div>
    <div class="center-logo">
      <h1 id="logo-text">Nexus.</h1>
    </div>
  </header>

  <div class="hero">
    <span class="hero-tag">üìç Baarn ‚Ä¢ Websites & Online Marketing</span>
    <h1>Jouw bedrijf verdient<br />een website die werkt.</h1>
    <p class="hero-summary">
      Geen templates. Geen maanden wachten. Wij bouwen snelle websites die jouw diensten helder uitleggen en nieuwe klanten binnenhalen. <strong style="color: rgba(99, 102, 241, 0.95);">In 2-4 weken online.</strong>
    </p>
    
    <div class="hero-proof-simple">
      <div class="hero-proof-item">
        ‚úì Snelle websites die makkelijk te vinden zijn
      </div>
      <div class="hero-proof-item">
        ‚úì Marketing die nieuwe aanvragen oplevert
      </div>
      <div class="hero-proof-item">
        ‚úì E√©n vast team, geen verrassingen
      </div>
    </div>

    <div class="hero-actions">
      <a href="/contact" class="hero-btn hero-btn--primary">
        <span>Plan een gesprek</span>
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M5 12h14M12 5l7 7-7 7"/>
        </svg>
      </a>
            <a href="#cases" class="hero-btn hero-btn--ghost">Bekijk eerdere projecten</a>
    </div>
  </div>
</section>

<script is:inline>
  // Nexus 3D Hero Background (desktop only)
  const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)');
  const isTouchViewport = window.matchMedia('(max-width: 768px)');
  const lowPowerThreads = navigator.hardwareConcurrency && navigator.hardwareConcurrency <= 4;

  const shouldSkipHero = prefersReducedMotion.matches || isTouchViewport.matches || lowPowerThreads;

  if (!shouldSkipHero) {
    // Dynamically import and initialize hero
    import('../../scripts/nexusHero.ts').then(module => {
      if (module.default) {
        if ('requestIdleCallback' in window) {
          requestIdleCallback(() => module.default(), { timeout: 1200 });
        } else {
          setTimeout(() => module.default(), 160);
        }
      }
    }).catch(err => console.warn('[hero] init failed', err));
  }
</script>
